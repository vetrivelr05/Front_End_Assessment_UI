[{"G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\index.js":"1","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\App.js":"2","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\reportWebVitals.js":"3","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\list-view.js":"4","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\services\\AccessAPI.js":"5","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\steps.js":"6","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\editUser.js":"7","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\TestDemo.js":"8"},{"size":999,"mtime":1682928944478,"results":"9","hashOfConfig":"10"},{"size":633,"mtime":1683315162571,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1682870388273,"results":"12","hashOfConfig":"10"},{"size":5372,"mtime":1683315320923,"results":"13","hashOfConfig":"10"},{"size":607,"mtime":1683314746733,"results":"14","hashOfConfig":"10"},{"size":7506,"mtime":1683111512381,"results":"15","hashOfConfig":"10"},{"size":7770,"mtime":1683314820889,"results":"16","hashOfConfig":"10"},{"size":7850,"mtime":1683315381103,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"13x0phc",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\index.js",[],[],[],"G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\App.js",[],[],"G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\reportWebVitals.js",[],[],"G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\list-view.js",["47","48","49","50"],[],"import React, { useEffect, useState } from \"react\";\r\nimport logo from '../assets/images/logo.png';\r\nimport trash from '../assets/images/trash.png';\r\nimport edit from '../assets/images/edit.png';\r\nimport close from '../assets/images/close.png';\r\nimport Steps from \"./steps\";\r\nimport EditUser from \"./editUser\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AccessAPI } from \"../services/AccessAPI\";\r\nimport Modal from 'react-modal';\r\nimport TestDemo from \"./TestDemo\";\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\nvar userids=0;\r\nlet ListView = () =>{\r\n  let subtitle;\r\n  const [modalIsOpen, setIsOpen,] = useState(false);\r\n  const [modalIsEditOpen, setIsEditOpen,] = useState(false);\r\nconst[editdataid,setEditDataId]=useState(0);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  function openModals(ids) {\r\n    setIsEditOpen(true);\r\n    setEditDataId(ids);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    //subtitle.style.color = '#f00';\r\n\r\n  }\r\n  function afterOpenModals() {\r\n    // references are now sync'd and can be accessed.\r\n    //subtitle.style.color = '#f00';\r\n\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n  function closeModals() {\r\n    setIsEditOpen(false);\r\n  }\r\n  let [state, setState] = useState(\r\n    {\r\n    users : [],\r\n    errorMessage : ''\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    document.body.classList.remove('steps');\r\n    document.body.classList.add('list-view');\r\n    async function fetchData() {\r\n        \r\n      try{\r\n      const response = await AccessAPI.getAll();\r\n      setState({\r\n        ...state,\r\n        users: response.data,\r\n      });\r\n      }\r\n      catch(error) {\r\n        setState({\r\n            ...state,\r\n            errorMessage: error.message\r\n        })\r\n      }\r\n    }\r\n    fetchData();        \r\n}, []);\r\n\r\nfunction deleteUser(id){\r\n  debugger\r\n  var userid = parseInt(id)\r\n  fetch(`https://6451419aa3221969115f2e5e.mockapi.io/api/v1/users/${userid}`, {\r\n  method: 'DELETE',\r\n}).then(res => {\r\n  if (res.ok) {\r\n      return res.json();\r\n  }\r\n  // handle error\r\n}).then(task => {\r\n  // Do something with deleted task\r\n  window.location.replace(\"/\")\r\n}).catch(error => {\r\n  // handle error\r\n  console.log(errorMessage)\r\n})\r\n}\r\nlet {users, errorMessage}= state;\r\n    return (\r\n      <>\r\n        <article className=\"list-view-main bg-gray-100 container\">\r\n        {\r\n            users.length > 0 &&\r\n            users.map(user =>{\r\n                return(\r\n            <aside className=\"list-view-item px-6 py-4\" key={user.id}>\r\n              <div className=\"action-icon\">\r\n                <img src={edit} alt=\"edit\" title=\"Edit User\" className='img-edit' value={user.id} onClick={ () => openModals(user.id)} />  \r\n                <img src={trash} alt=\"trash\"  title=\"Delete User\" className='img-trash' onClick={ () => deleteUser(user.id)} value={user.id} />\r\n              </div>\r\n                <div className='inner-list-view'>\r\n                <div className='list-view-item-left'>\r\n                  <img src={logo} alt=\"logo\" className='img-logo' />                  \r\n                </div>\r\n                <div className='list-view-item-right' value={user.id}>\r\n                  <h3 className='title'>{user.job_title}</h3>\r\n                  <p className='company'>{user.company_name} - {user.industry}</p>\r\n                  <p className='location'>{user.location} ({user.remote_type})</p>\r\n                  <p className='timining'>Part-Time (9:00 am - 5:00 pm IST)</p>\r\n                  <p className='experience'>Experience ({user.experience_min} - {user.experience_max} years)</p>\r\n                  <p className='salary'>INR (â‚¹) {user.salary_min} - {user.salery_max} / Month</p>\r\n                  <p className='emp'>{user.total_emp} employees</p>\r\n                  <div className=\"btn-group-list\">\r\n                    <Link onClick={openModal} className=\"btn-primary\">Apply Now</Link>\r\n                    <Link onClick={openModal} className=\"btn-primary-outline\">External Apply</Link>\r\n                  </div>\r\n                </div>\r\n                </div>  \r\n            </aside> \r\n            )\r\n            })\r\n        } \r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n        portalClassName=\"main-popup\"\r\n      >\r\n        \r\n        <div>\r\n        <button onClick={closeModal} className=\"close\"><img src={close} alt=\"edit\" title=\"Edit User\" className='img-close'  /> </button>\r\n        <Steps />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        isOpen={modalIsEditOpen}\r\n        onAfterOpen={afterOpenModals}\r\n        onRequestClose={closeModals}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n        portalClassName=\"main-popup main-popup-edit\"\r\n      >\r\n        \r\n        <div>\r\n        <button onClick={closeModals} className=\"close\"><img src={close} alt=\"edit\" title=\"Edit User\" className='img-close' /> </button>\r\n        {/* <EditUser  /> */}\r\n        <TestDemo editdata={editdataid} />\r\n        </div>\r\n      </Modal>\r\n      \r\n        </article>\r\n      </>\r\n    );\r\n  }\r\n  export default ListView","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\services\\AccessAPI.js",[],[],"G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\steps.js",["51","52"],[],"import React, { Component } from 'react';\r\nclass Steps extends Component {\r\n  constructor(props) {\r\n    document.body.classList.remove('list-view');\r\n    document.body.classList.add('steps');\r\n    super(props)\r\n    this.state = {\r\n      currentStep: 1,\r\n      job_title:  '',\r\n      company_name: '',\r\n      industry: '', \r\n      location: '', \r\n      remote_type: '', \r\n      experience_min: '', \r\n      experience_max: '', \r\n      salary_min: '', \r\n      salery_max: '', \r\n      total_emp: '', \r\n      apply_type: '', \r\n    }\r\n    this.saveOrUpdateUser = this.saveOrUpdateUser.bind(this);\r\n    this.nextButton=this.nextButton.bind(this)\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })    \r\n  }\r\n  newTask = {\r\n    content: 'Check out mockapi.io',\r\n    completed: false,\r\n  };\r\n  \r\n  handleSubmit = event => {\r\n    debugger\r\n    event.preventDefault();\r\n  const newTask = {\r\n  job_title: this.state.job_title,\r\n  company_name: this.state.company_name,\r\n  industry: this.state.industry,\r\n  location: this.state.location,\r\n  remote_type: this.state.remote_type,\r\n  experience_min: this.state.experience_min,\r\n  experience_max: this.state.experience_max,\r\n  salary_min: this.state.salary_min,\r\n  salery_max: this.state.salery_max,\r\n  total_emp: this.state.total_emp,\r\n  apply_type: this.state.apply_type,\r\n  completed: false,\r\n};\r\nfetch('https://6451419aa3221969115f2e5e.mockapi.io/api/v1/users/', {\r\n  method: 'POST',\r\n  headers: {'content-type':'application/json'},\r\n  body: JSON.stringify(newTask)\r\n}).then(res => {\r\n  if (res.ok) {\r\n      return res.json();\r\n  }\r\n}).then(task => {\r\n  window.location.replace(\"/\")\r\n}).catch(error => {\r\n})  } \r\n  saveOrUpdateUser = (e) => {\r\n    e.preventDefault();    \r\n  }\r\n   _next = () => {\r\n     let currentStep = this.state.currentStep\r\n     currentStep = currentStep >= 2? 2: currentStep + 1\r\n     this.setState({\r\n       currentStep: currentStep\r\n     })\r\n   }   \r\nnextButton = () =>{\r\n  let currentStep = this.state.currentStep;\r\n  debugger\r\n  console.log(currentStep);\r\n  if(currentStep <=2) {\r\n    if(currentStep ==1) {\r\n      return (        \r\n        <article className=\"container step-one-main\">\r\n        <aside className=\"step-one  p-8\">            \r\n          <div className=\"form-header\">\r\n            <div className=\"form-header-title\">\r\n            Create a job\r\n            </div>\r\n            <div className=\"form-header-step\">\r\n            Step 1\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-6\">\r\n            <label className=\"form-label\" for=\"title\">Job title<span className=\"text-error\">*</span></label>\r\n            <input type=\"text\" name=\"job_title\" value={this.job_title} onChange={this.handleChange} placeholder=\"ex. UX UI Designer\" className=\"input-form\" />\r\n          </div>\r\n          <div className=\"pb-6\">\r\n            <label className=\"form-label\" for=\"Company\">Company name<span className=\"text-error\">*</span></label>\r\n            <input type=\"text\" name=\"company_name\" value={this.company_name} onChange={this.handleChange} placeholder=\"ex. Google\" className=\"input-form\" />\r\n          </div>\r\n          <div className=\"pb-6\">\r\n            <label className=\"form-label\" for=\"industry\">Industry<span className=\"text-error\">*</span></label>\r\n            <input type=\"text\" name=\"industry\" value={this.industry} onChange={this.handleChange} placeholder=\"ex. Information Technology\" className=\"input-form\" />\r\n          </div>\r\n          <div className=\"form-row pb-24\">\r\n            <div className=\"location-form\">\r\n              <label className=\"form-label\" for=\"location\">Location<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"location\" value={this.location} placeholder=\"ex. Chennai\" className=\"input-form\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"location-form\">\r\n              <label className=\"form-label\" for=\"remote_type\">Remote type<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"remote_type\"  value={this.remote_type} onChange={this.handleChange} placeholder=\"ex. In-office\" className=\"input-form\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"text-right button-footer\">\r\n        <button className=\"btn-primary\"  type=\"button\" onClick={this._next}>\r\n        Next\r\n        </button>  \r\n          </div>\r\n        </aside>\r\n        </article>  \r\n      )\r\n    }\r\n    else if(currentStep ==2){\r\n      return ( \r\n    <article className=\"container step-one-main\">\r\n          <aside className=\"step-one  p-8\">            \r\n            <div className=\"form-header\">\r\n              <div className=\"form-header-title\">\r\n              Create a job\r\n              </div>\r\n              <div className=\"form-header-step\">\r\n              Step 2\r\n              </div>\r\n            </div> \r\n                <label className=\"form-label\" for=\"\">Experience</label>\r\n            <div className=\"form-row pb-6\">\r\n              <div className=\"location-form\">\r\n                <input type=\"text\" name=\"experience_min\" onChange={this.handleChange} value={this.experience_min} placeholder=\"Minimum\" className=\"input-form\" />\r\n              </div>\r\n              <div className=\"location-form\">\r\n                <input type=\"text\" name=\"experience_max\" onChange={this.handleChange} value={this.experience_max} placeholder=\"Maximum\" className=\"input-form\" />\r\n              </div>\r\n            </div>\r\n            <label className=\"form-label\" for=\"\">Salary</label>\r\n            <div className=\"form-row pb-6\">\r\n              <div className=\"location-form\">\r\n                <input type=\"text\" name=\"salary_min\" onChange={this.handleChange} value={this.salary_min} placeholder=\"Minimum\" className=\"input-form\" />\r\n             </div>\r\n             <div className=\"location-form\">\r\n               <input type=\"text\" name=\"salery_max\" onChange={this.handleChange} value={this.salery_max} placeholder=\"Maximum\" className=\"input-form\" />\r\n             </div>\r\n           </div>\r\n           <div className=\"pb-6\">\r\n           <label className=\"form-label\" for=\"title\">Total employee</label>\r\n             <input type=\"text\" name=\"total_emp\" onChange={this.handleChange} value={this.total_emp} placeholder=\"ex. 100\" className=\"input-form\" />\r\n         </div>\r\n         <label className=\"form-label\" for=\"\">Apply type</label>\r\n         <div className=\"form-row-radio pb-24 justify-start\">\r\n           <div className=\"radio-form\">\r\n             <input type=\"radio\" name=\"apply_type\" onChange={this.handleChange} value=\"0\" placeholder=\"Quick apply\" className=\"input-form-radio\" /><span className=\"label-radio\">Quick apply</span>\r\n              </div>\r\n              <div className=\"radio-form\">\r\n                <input type=\"radio\" name=\"apply_type\" onChange={this.handleChange} value=\"1\" placeholder=\"External apply\" className=\"input-form-radio\" /><span className=\"label-radio\">External apply</span>\r\n               </div>\r\n             </div>\r\n             <div className=\"text-right button-footer\">\r\n             <button type=\"button\" className=\"btn-primary\" onClick={this.handleSubmit} >Save</button>\r\n             </div>\r\n           </aside>\r\n    </article>\r\n      )\r\n    }\r\n  }\r\n  return null;\r\n}  \r\n  render() {  \r\n    return (\r\n      <React.Fragment>\r\n      <form onSubmit={this.handleSubmit}>        \r\n        {this.nextButton()}\r\n      </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Steps\r\n","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\editUser.js",["53","54"],[],"import React, { Component } from 'react';\r\nimport { AccessAPI } from \"../services/AccessAPI\";\r\nimport $ from 'jquery';\r\nclass EditUser extends Component {\r\n  constructor(props) {\r\n    document.body.classList.remove('list-view');\r\n    document.body.classList.add('steps');\r\n    super(props)\r\n    this.state = {\r\n      currentStep: 1,\r\n       job_title:  '',\r\n       company_name: '',\r\n       industry: '', \r\n       location: '', \r\n       remote_type: '', \r\n       experience_min: '', \r\n       experience_max: '', \r\n       salary_min: '', \r\n       salery_max: '', \r\n       total_emp: '', \r\n       apply_type: '', \r\n    }\r\n    //this.create = this.create.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.saveOrUpdateUser = this.saveOrUpdateUser.bind(this);\r\n    this.nextButton=this.nextButton.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    debugger\r\n}\r\n  handleChange = event => {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })    \r\n  }\r\n  \r\n  handleSubmit = () =>{\r\n    alert('Ok')\r\n    debugger\r\n } \r\n  saveOrUpdateUser = (e) => {\r\n    e.preventDefault();    \r\n  }\r\n   _next = () => {\r\n     let currentStep = this.state.currentStep\r\n     currentStep = currentStep >= 2? 2: currentStep + 1\r\n     this.setState({\r\n       currentStep: currentStep\r\n     })\r\n   }   \r\nnextButton = () =>{\r\n  let currentStep = this.state.currentStep;\r\n  debugger\r\nvar UserId =5;\r\n    AccessAPI.getUser(UserId).then( (res) =>{\r\n        let user = res.data;\r\n        this.setState({\r\n          job_title: user.job_title,\r\n          company_name: user.company_name,\r\n          industry : user.industry,\r\n          location : user.location,\r\n          remote_type : user.remote_type,\r\n          experience_min : user.experience_min,\r\n          experience_max : user.experience_max,\r\n          salary_min : user.salary_min,\r\n          salery_max : user.salery_max,\r\n          total_emp : user.total_emp,\r\n          apply_type : user.apply_type,\r\n        });\r\n        if(this.state.apply_type>1){\r\n          $(\".radio_0\").prop('checked', true);\r\n        }else{\r\n          $(\".radio_0\").prop('checked', true);\r\n        }\r\n    })\r\n  if(currentStep <=2) {\r\n    if(currentStep ==1) {\r\n      return (        \r\n        <article className=\"container step-one-main\">\r\n        <aside className=\"step-one  p-8\">            \r\n          <div className=\"form-header\">\r\n            <div className=\"form-header-title\">\r\n            Edit a job\r\n            </div>\r\n            <div className=\"form-header-step\">\r\n            Step 1\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-6\">\r\n            <label className=\"form-label\" for=\"title\">Job title<span className=\"text-error\">*</span></label>\r\n            <input type=\"text\" name=\"job_title\" value={this.state.job_title} onChange={this.handleChange} placeholder=\"ex. UX UI Designer\" className=\"input-form\" />\r\n          </div>\r\n          <div className=\"pb-6\">\r\n            <label className=\"form-label\" for=\"Company\">Company name<span className=\"text-error\">*</span></label>\r\n            <input type=\"text\" name=\"company_name\" value={this.state.company_name} onChange={this.handleChange} placeholder=\"ex. Google\" className=\"input-form\" />\r\n          </div>\r\n          <div className=\"pb-6\">\r\n            <label className=\"form-label\" for=\"industry\">Industry<span className=\"text-error\">*</span></label>\r\n            <input type=\"text\" name=\"industry\" value={this.state.industry} onChange={this.handleChange} placeholder=\"ex. Information Technology\" className=\"input-form\" />\r\n          </div>\r\n          <div className=\"form-row pb-24\">\r\n            <div className=\"location-form\">\r\n              \r\n              <label className=\"form-label\" for=\"location\">Location<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"location\" value={this.state.location} placeholder=\"ex. Chennai\" className=\"input-form\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"location-form\">\r\n              <label className=\"form-label\" for=\"remote_type\">Remote type<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"remote_type\"  value={this.state.remote_type} onChange={this.handleChange} placeholder=\"ex. In-office\" className=\"input-form\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"text-right button-footer\">\r\n        <button className=\"btn-primary\"  type=\"button\" onClick={this._next}>\r\n        Next\r\n        </button>  \r\n          </div>\r\n        </aside>\r\n        </article>  \r\n      )\r\n    }\r\n    else if(currentStep ==2){\r\n      return ( \r\n    <article className=\"container step-one-main\">\r\n          <aside className=\"step-one  p-8\">            \r\n            <div className=\"form-header\">\r\n              <div className=\"form-header-title\">\r\n              Create a job\r\n              </div>\r\n              <div className=\"form-header-step\">\r\n              Step 2\r\n              </div>\r\n            </div> \r\n                <label className=\"form-label\" for=\"\">Experience</label>\r\n            <div className=\"form-row pb-6\">\r\n              <div className=\"location-form\">\r\n                <input type=\"text\" name=\"experience_min\" onChange={this.handleChange} value={this.state.experience_min} placeholder=\"Minimum\" className=\"input-form\" />\r\n              </div>\r\n              <div className=\"location-form\">\r\n                <input type=\"text\" name=\"experience_max\" onChange={this.handleChange} value={this.state.experience_max} placeholder=\"Maximum\" className=\"input-form\" />\r\n              </div>\r\n            </div>\r\n            <label className=\"form-label\" for=\"\">Salary</label>\r\n            <div className=\"form-row pb-6\">\r\n              <div className=\"location-form\">\r\n                <input type=\"text\" name=\"salary_min\" onChange={this.handleChange} value={this.state.salary_min} placeholder=\"Minimum\" className=\"input-form\" />\r\n             </div>\r\n             <div className=\"location-form\">\r\n               <input type=\"text\" name=\"salery_max\" onChange={this.handleChange} value={this.state.salery_max} placeholder=\"Maximum\" className=\"input-form\" />\r\n             </div>\r\n           </div>\r\n           <div className=\"pb-6\">\r\n           <label className=\"form-label\" for=\"title\">Total employee</label>\r\n             <input type=\"text\" name=\"total_emp\" onChange={this.handleChange} value={this.state.total_emp} placeholder=\"ex. 100\" className=\"input-form\" />\r\n         </div>\r\n         <label className=\"form-label\" for=\"\">Apply type</label>\r\n         <div className=\"form-row-radio pb-24 justify-start\">\r\n           <div className=\"radio-form\">\r\n           \r\n             <input type=\"radio\" name=\"apply_type\" onChange={this.handleChange} value=\"0\" id=\"radio_0\" placeholder=\"Quick apply\" className=\"input-form-radio radio_0\" /><span className=\"label-radio\">Quick apply</span>\r\n              </div>\r\n              <div className=\"radio-form\">\r\n                <input type=\"radio\" name=\"apply_type\" onChange={this.handleChange} value=\"1\" id=\"radio_1\" placeholder=\"External apply\" className=\"input-form-radio radio_1\" /><span className=\"label-radio\">External apply</span>\r\n               </div>\r\n             </div>\r\n             <div className=\"text-right button-footer\">\r\n             <button type=\"button\" className=\"btn-primary\" onClick={this.handleSubmit} >Save</button>\r\n             </div>\r\n           </aside>\r\n    </article>\r\n      )\r\n    }\r\n  }\r\n  return null;\r\n}  \r\n  render() {  \r\n    return (\r\n      <React.Fragment>\r\n      <form onSubmit={this.handleSubmit}>        \r\n        {this.nextButton()}\r\n      </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser\r\n","G:\\learning\\Task_UI\\Front_End_Assessment_UI\\front_end_assessment_ui\\Front_End_Assessment_UI\\src\\components\\TestDemo.js",["55","56","57"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AccessAPI } from \"../services/AccessAPI\";\r\nimport $ from 'jquery';\r\nconst serverURL = `https://6451419aa3221969115f2e5e.mockapi.io/api/v1/users/`;\r\nconst TestDemo = (props) => {\r\n  const [userdata, setUserData] = useState([]);\r\n  let [count, setUsersData] = useState(1);\r\n  const [state, setState] = useState({\r\n    // user:{\r\n      job_title:  '',\r\n      company_name: '',\r\n      industry: '', \r\n      location: '', \r\n      remote_type: '', \r\n      experience_min: '', \r\n      experience_max: '', \r\n      salary_min: '', \r\n      salery_max: '', \r\n      total_emp: '', \r\n      apply_type: '', \r\n    // }\r\n  })\r\n  let handleSubmit = () =>{\r\n    console.log(\"Ok\")\r\n  }\r\n  const { editdata } = props;\r\n  \r\n  const getdata = (editdata) => {\r\n    axios.get(serverURL + editdata).then((resp) => {\r\n      console.log(resp.data);\r\n      let user = resp.data;\r\n      setState({\r\n        job_title: user.job_title,\r\n        company_name: user.company_name,\r\n        industry : user.industry,\r\n        location : user.location,\r\n        remote_type : user.remote_type,\r\n        experience_min : user.experience_min,\r\n        experience_max : user.experience_max,\r\n        salary_min : user.salary_min,\r\n        salery_max : user.salery_max,\r\n        total_emp : user.total_emp,\r\n        apply_type : user.apply_type,\r\n      });\r\n      if(user.apply_type>1){\r\n        $(\".radio_0\").prop('checked', true);\r\n      }else{\r\n        $(\".radio_0\").prop('checked', true);\r\n      }\r\n      setUserData(resp.data);\r\n      nextButton(resp.data);\r\n    });\r\n  };\r\n  useEffect(()=>{\r\n    document.body.classList.remove('list-view');\r\n    document.body.classList.add('steps');\r\n    getdata(editdata);\r\n\r\n  },[]);\r\n  console.log(\"User Edit Id is\", userdata);\r\n  let handleChange = event => {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })  \r\n    \r\n  }\r\n  let _next = () => {\r\n    debugger\r\n    let currentStep = count\r\n    currentStep = currentStep >= 2? 2: currentStep + 1\r\n    setUsersData({\r\n      count: currentStep\r\n    })\r\n  } \r\n  const nextButton = () =>{\r\n    let currentStep = count;  \r\n    if(currentStep <=2) {\r\n      if(currentStep == 1) {\r\n        return (        \r\n          <article className=\"container step-one-main\">\r\n          <aside className=\"step-one  p-8\">            \r\n            <div className=\"form-header\">\r\n              <div className=\"form-header-title\">\r\n              Edit a job\r\n              </div>\r\n              <div className=\"form-header-step\">\r\n              Step 1\r\n              </div>\r\n            </div>\r\n            <div className=\"pb-6\">\r\n              <label className=\"form-label\" for=\"title\">Job title<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"job_title\" value={state.job_title} onChange={handleChange} placeholder=\"ex. UX UI Designer\" className=\"input-form\" />\r\n            </div>\r\n            <div className=\"pb-6\">\r\n              <label className=\"form-label\" for=\"Company\">Company name<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"company_name\" value={state.company_name} onChange={handleChange} placeholder=\"ex. Google\" className=\"input-form\" />\r\n            </div>\r\n            <div className=\"pb-6\">\r\n              <label className=\"form-label\" for=\"industry\">Industry<span className=\"text-error\">*</span></label>\r\n              <input type=\"text\" name=\"industry\" value={state.industry} onChange={handleChange} placeholder=\"ex. Information Technology\" className=\"input-form\" />\r\n            </div>\r\n            <div className=\"form-row pb-24\">\r\n              <div className=\"location-form\">\r\n                \r\n                <label className=\"form-label\" for=\"location\">Location<span className=\"text-error\">*</span></label>\r\n                <input type=\"text\" name=\"location\" value={state.location} placeholder=\"ex. Chennai\" className=\"input-form\" onChange={handleChange} />\r\n              </div>\r\n              <div className=\"location-form\">\r\n                <label className=\"form-label\" for=\"remote_type\">Remote type<span className=\"text-error\">*</span></label>\r\n                <input type=\"text\" name=\"remote_type\"  value={state.remote_type} onChange={handleChange} placeholder=\"ex. In-office\" className=\"input-form\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"text-right button-footer\">\r\n          <button className=\"btn-primary\"  type=\"button\" onClick={_next}>\r\n          Next\r\n          </button>  \r\n            </div>\r\n          </aside>\r\n          </article>  \r\n        )\r\n      }\r\n      else if(currentStep >2){\r\n        return ( \r\n      <article className=\"container step-one-main\">\r\n            <aside className=\"step-one  p-8\">            \r\n              <div className=\"form-header\">\r\n                <div className=\"form-header-title\">\r\n                Create a job\r\n                </div>\r\n                <div className=\"form-header-step\">\r\n                Step 2\r\n                </div>\r\n              </div> \r\n                  <label className=\"form-label\" for=\"\">Experience</label>\r\n              <div className=\"form-row pb-6\">\r\n                <div className=\"location-form\">\r\n                  <input type=\"text\" name=\"experience_min\" onChange={handleChange} value={state.experience_min} placeholder=\"Minimum\" className=\"input-form\" />\r\n                </div>\r\n                <div className=\"location-form\">\r\n                  <input type=\"text\" name=\"experience_max\" onChange={handleChange} value={state.experience_max} placeholder=\"Maximum\" className=\"input-form\" />\r\n                </div>\r\n              </div>\r\n              <label className=\"form-label\" for=\"\">Salary</label>\r\n              <div className=\"form-row pb-6\">\r\n                <div className=\"location-form\">\r\n                  <input type=\"text\" name=\"salary_min\" onChange={handleChange} value={state.salary_min} placeholder=\"Minimum\" className=\"input-form\" />\r\n               </div>\r\n               <div className=\"location-form\">\r\n                 <input type=\"text\" name=\"salery_max\" onChange={handleChange} value={state.salery_max} placeholder=\"Maximum\" className=\"input-form\" />\r\n               </div>\r\n             </div>\r\n             <div className=\"pb-6\">\r\n             <label className=\"form-label\" for=\"title\">Total employee</label>\r\n               <input type=\"text\" name=\"total_emp\" onChange={handleChange} value={state.total_emp} placeholder=\"ex. 100\" className=\"input-form\" />\r\n           </div>\r\n           <label className=\"form-label\" for=\"\">Apply type</label>\r\n           <div className=\"form-row-radio pb-24 justify-start\">\r\n             <div className=\"radio-form\">\r\n             \r\n               <input type=\"radio\" name=\"apply_type\" onChange={handleChange} value=\"0\" id=\"radio_0\" placeholder=\"Quick apply\" className=\"input-form-radio radio_0\" /><span className=\"label-radio\">Quick apply</span>\r\n                </div>\r\n                <div className=\"radio-form\">\r\n                  <input type=\"radio\" name=\"apply_type\" onChange={handleChange} value=\"1\" id=\"radio_1\" placeholder=\"External apply\" className=\"input-form-radio radio_1\" /><span className=\"label-radio\">External apply</span>\r\n                 </div>\r\n               </div>\r\n               <div className=\"text-right button-footer\">\r\n               <button type=\"button\" className=\"btn-primary\" onClick={handleSubmit} >Save</button>\r\n               </div>\r\n             </aside>\r\n      </article>\r\n        )\r\n      }\r\n    }\r\n    return null;\r\n    //count +=;    \r\n  } \r\n  //return <div>{editdata}</div>;\r\n  return ( \r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit}>        \r\n        {nextButton(userdata)}\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default TestDemo;\r\n",{"ruleId":"58","severity":1,"message":"59","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":22,"column":5,"nodeType":"60","messageId":"61","endLine":22,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":24,"column":7,"nodeType":"60","messageId":"61","endLine":24,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":79,"column":4,"nodeType":"66","endLine":79,"endColumn":6,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":80,"column":20,"nodeType":"70","messageId":"71","endLine":80,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":123,"column":25,"nodeType":"70","messageId":"71","endLine":123,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":79,"column":20,"nodeType":"70","messageId":"71","endLine":79,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":123,"column":25,"nodeType":"70","messageId":"71","endLine":123,"endColumn":27},{"ruleId":"58","severity":1,"message":"72","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":19},{"ruleId":"64","severity":1,"message":"73","line":60,"column":5,"nodeType":"66","endLine":60,"endColumn":7,"suggestions":"74"},{"ruleId":"68","severity":1,"message":"69","line":80,"column":22,"nodeType":"70","messageId":"71","endLine":80,"endColumn":24},"no-unused-vars","'EditUser' is defined but never used.","Identifier","unusedVar","'userids' is assigned a value but never used.","'subtitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AccessAPI' is defined but never used.","React Hook useEffect has missing dependencies: 'editdata' and 'getdata'. Either include them or remove the dependency array.",["76"],{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [state]",{"range":"81","text":"82"},"Update the dependencies array to be: [editdata, getdata]",{"range":"83","text":"84"},[1973,1975],"[state]",[1771,1773],"[editdata, getdata]"]